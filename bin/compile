#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

header() {
  echo "" || true
  echo "-----> $*" || true
}

output() {
  while IFS= read -r LINE; do
    # do not indent headers that are being piped through the output
    if [[ "$LINE" =~ ^-----\>.* ]]; then
      echo "$LINE" || true
    else
      echo "       $LINE" || true
    fi
  done
}

header "Installing func, fift, lite-client"

BUILD_DIR=${1:-}
RESOURCES_DIR="resources"

cd $BUILD_DIR
mkdir -p $RESOURCES_DIR
cd $RESOURCES_DIR

#echo "Querying releases" | output
#RELEASES=$(curl "https://api.github.com/repos/ton-defi-org/ton-binaries/releases" -s -L --silent --fail --retry 5 --retry-max-time 15)
echo "DONE" | output

get_file() {
  echo "Downloading $1" | output
  code=$(curl -s -L --silent --fail --retry 5 --retry-max-time 15 --write-out "%{http_code}" $1 -o "./$2")
  if [ "$code" != "200" ]; then
    echo "Unable to download $1: $code" | output && exit 1
  fi
}

FIFT_0_3_0_URL=https://github.com/ton-defi-org/ton-binaries/releases/download/ubuntu-18-0.3.0/fift # $(echo $RELEASES | grep "browser_download.*ubuntu-18.*fift" | cut -d : -f 2,3 | tr -d \")
FUNC_0_3_0_URL=https://github.com/ton-defi-org/ton-binaries/releases/download/ubuntu-18-0.3.0/func 
FIFT_0_2_0_URL=https://github.com/ton-defi-org/ton-binaries/releases/download/ubuntu-18-0.2.0/fift 
FUNC_0_2_0_URL=https://github.com/ton-defi-org/ton-binaries/releases/download/ubuntu-18-0.2.0/func 

mkdir -p binaries/0.2.0 binaries/0.3.0 fiftlib

get_file $FIFT_0_3_0_URL "binaries/0.3.0/fift"
get_file $FUNC_0_3_0_URL "binaries/0.3.0/func"
get_file $FIFT_0_2_0_URL "binaries/0.2.0/fift"
get_file $FUNC_0_2_0_URL "binaries/0.2.0/func"
chmod +x "binaries/0.3.0/fift" "binaries/0.3.0/func" "binaries/0.2.0/fift" "binaries/0.2.0/func"

cd fiftlib
get_file https://github.com/ton-defi-org/ton-binaries/releases/download/fiftlib/fiftlib.zip fiftlib.zip
unzip fiftlib.zip
rm fiftlib.zip

PROFILE_PATH="$BUILD_DIR/.profile.d/ton.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export TON_BINARIES_PATH="${HOME}/binaries"' >> $PROFILE_PATH
echo 'export FIFTPATH="$PATH:${HOME}/binaries"' >> $PROFILE_PATH

echo "Installation successful" | output
