#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

header() {
  echo "" || true
  echo "-----> $*" || true
}

output() {
  while IFS= read -r LINE; do
    # do not indent headers that are being piped through the output
    if [[ "$LINE" =~ ^-----\>.* ]]; then
      echo "$LINE" || true
    else
      echo "       $LINE" || true
    fi
  done
}

header "Installing func, fift"

BUILD_DIR=${1:-}
RESOURCES_DIR="resources"

cd $BUILD_DIR
mkdir -p $RESOURCES_DIR
cd $RESOURCES_DIR

#echo "Querying releases" | output
#RELEASES=$(curl "https://api.github.com/repos/ton-defi-org/ton-binaries/releases" -s -L --silent --fail --retry 5 --retry-max-time 15)
echo "DONE" | output

get_file() {
  echo "Downloading $1" | output
  code=$(curl -s -L --silent --fail --retry 5 --retry-max-time 15 --write-out "%{http_code}" $1 -o "./$2")
  if [ "$code" != "200" ]; then
    echo "Warning: Unable to download $1 (HTTP $code). Skipping." | output
    return 1
  fi
  return 0
}

BASE_RELEASE_URL=https://github.com/ton-defi-org/ton-binaries/releases/download/ubuntu-22-
RELEASES_URL=https://raw.githubusercontent.com/ton-community/contract-verifier-config/main/config.json
RELEASES=$(curl -s $RELEASES_URL | grep -oP '(?<="funcVersions":\s)\[[^\]]+\]' | sed 's/"//g; s/,//g; s/\[//; s/\]//' | tr ' ' '\n')

for release in ${RELEASES[@]}; do
  mkdir -p binaries/$release/fiftlib

  if get_file "$BASE_RELEASE_URL$release/fift" "binaries/$release/fift" &&
     get_file "$BASE_RELEASE_URL$release/func" "binaries/$release/func" &&
     get_file "$BASE_RELEASE_URL$release/fiftlib.zip" "binaries/$release/fiftlib.zip"; then

    chmod +x "binaries/$release/fift" "binaries/$release/func"
    cd "binaries/$release/fiftlib"
    unzip ../fiftlib.zip
    rm ../fiftlib.zip
    cd ../../..
  else
    echo "Skipping release $release due to missing files." | output
    rm -rf "binaries/$release"
  fi
done

PROFILE_PATH="$BUILD_DIR/.profile.d/ton.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export TON_BINARIES_PATH="${HOME}/binaries"' >> $PROFILE_PATH
echo 'export FIFTPATH="$PATH:${HOME}/binaries"' >> $PROFILE_PATH

echo "Installation successful" | output
